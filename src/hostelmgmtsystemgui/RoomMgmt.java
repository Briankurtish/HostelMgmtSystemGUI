/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hostelmgmtsystemgui;
import java.sql.Connection;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Cipher
 */
public class RoomMgmt extends javax.swing.JFrame {

    /**
     * Creates new form HostelMgmt
     */
    public RoomMgmt() {
        initComponents();
        DisplayRooms();
        GetHostels();
    }
    
        Connection con = null;
Statement st = null;
ResultSet Rs = null;
    private void GetHostels()
{
    try
    {
        con = DriverManager.getConnection("jdbc:mysql://localhost/hosteldb", "root", "root");
        st = con.createStatement();
        String query = " select * from hostel";
        Rs = st.executeQuery(query);
        while(Rs.next()){
            String Hostel = Rs.getString("name");
            hostelNameCB.addItem(Hostel);
        }
    }
    catch(Exception e)
    {
        e.printStackTrace();
    }
}
    
    private void DisplayRooms()
{
    try{
        con = DriverManager.getConnection("jdbc:mysql://localhost/hosteldb", "root", "root");
        st = con.createStatement();
        Rs = st.executeQuery("select * from room");
        roomTable.setModel(DbUtils.resultSetToTableModel(Rs));
    }
    catch(SQLException e){
        e.printStackTrace();
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        roomTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        roomNumber_F = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        hostelID_F = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        statusCB = new javax.swing.JComboBox<>();
        typeCB = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        hostelNameCB = new javax.swing.JComboBox<>();
        getHID = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        roomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Room Number", "Hostel ID", "Occupancy Status", "Type"
            }
        ));
        roomTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(roomTable);

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel1.setText("ROOM MANAGEMENT");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Room Number");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Hostel ID");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Occupancy Status");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Type");

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        clearBtn.setText("Clear");

        statusCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Occupied" }));

        typeCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single", "Double" }));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Hostel Name");

        getHID.setText("Get");
        getHID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getHIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(addBtn)
                        .addGap(31, 31, 31)
                        .addComponent(updateBtn)
                        .addGap(28, 28, 28)
                        .addComponent(deleteBtn)
                        .addGap(18, 18, 18)
                        .addComponent(clearBtn)
                        .addGap(276, 276, 276))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(hostelID_F, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(hostelNameCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(roomNumber_F)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(getHID)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(typeCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(statusCB, 0, 217, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(344, 344, 344)
                        .addComponent(jLabel1)))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(roomNumber_F, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(hostelID_F, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(statusCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(hostelNameCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(getHID))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(typeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn)
                    .addComponent(updateBtn)
                    .addComponent(deleteBtn)
                    .addComponent(clearBtn))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        
        if(roomNumber_F.getText().isEmpty() || hostelID_F.getText().isEmpty() || statusCB.getSelectedIndex() == -1 || typeCB.getSelectedIndex() == -1)
        {
            JOptionPane.showMessageDialog(this, "Select The Room to be Updated From the Table Above");
        }
        else{
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost/hosteldb", "root", "root");
            String ID = roomNumber_F.getText();
            String Query = "update room set roomNumber='"+roomNumber_F.getText()+"',hostelID='"+hostelID_F.getText()+"',occupancyStatus='"+statusCB.getSelectedItem().toString()+"',roomType='"+typeCB.getSelectedItem().toString()+"' where roomNumber='"+ID+"'";
            Statement Add = con.createStatement();
            Add.executeUpdate(Query);
            JOptionPane.showMessageDialog(this, "Room Updated Successfully");
            DisplayRooms();
            Reset();
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "An Error Occured!");
            e.printStackTrace();
        }}
    }//GEN-LAST:event_updateBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        
        if(roomNumber_F.getText().isEmpty() || hostelID_F.getText().isEmpty() || statusCB.getSelectedIndex() == -1 || typeCB.getSelectedIndex() == -1)
        {
            JOptionPane.showMessageDialog(this, "Missing Information. Fill all the fields to continue");
        }
        else{
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost/hosteldb", "root", "root");
            PreparedStatement add = con.prepareStatement("insert into room values(?,?,?,?)");
            add.setString(1, roomNumber_F.getText());
            add.setString(2, hostelID_F.getText());
            add.setString(3, statusCB.getSelectedItem().toString());
            add.setString(4, typeCB.getSelectedItem().toString());
            int row = add.executeUpdate();
            JOptionPane.showMessageDialog(this, "Room Added Successfully");
            DisplayRooms();
            Reset();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error adding Room");
            e.printStackTrace();
        }}
    }//GEN-LAST:event_addBtnActionPerformed

    private void getHIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getHIDActionPerformed
        // TODO add your handling code here:
        
        try
    {
        con = DriverManager.getConnection("jdbc:mysql://localhost/hosteldb", "root", "root");
        st = con.createStatement();
        String hosteName = hostelNameCB.getSelectedItem().toString();
        String query = " select * from hostel where name='"+hosteName+"'";
        Rs = st.executeQuery(query);
        while(Rs.next()){
            String hosteID = Rs.getString("hostelID");
            
            hostelID_F.setText(hosteID);
        
        }
    }
    catch(Exception e)
    {
        e.printStackTrace();
    }
    }//GEN-LAST:event_getHIDActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        
        if(roomNumber_F.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Select The Room to be Deleted");
        }
        else{
        try{
            con = DriverManager.getConnection("jdbc:mysql://localhost/hosteldb", "root", "root");
            String Id = roomNumber_F.getText();
            String Query = "Delete from room where roomNumber ='"+Id+"'";
            Statement Add = con.createStatement();
            Add.executeUpdate(Query);
            JOptionPane.showMessageDialog(this, "Room Deleted Successfully");
            DisplayRooms();
            Reset();
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "An Error Occured");
            e.printStackTrace();
        }}
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void roomTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomTableMouseClicked
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel)roomTable.getModel();
        int MyIndex = roomTable.getSelectedRow();
        roomNumber_F.setText(model.getValueAt(MyIndex, 0).toString());
        hostelID_F.setText(model.getValueAt(MyIndex, 1).toString());
        statusCB.setSelectedItem(model.getValueAt(MyIndex, 2).toString());
        typeCB.setSelectedItem(model.getValueAt(MyIndex, 3).toString());
    }//GEN-LAST:event_roomTableMouseClicked

    
    private void Reset(){
        roomNumber_F.setText("");
        hostelID_F.setText("");
        statusCB.setSelectedIndex(0);
        typeCB.setSelectedIndex(0);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomMgmt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomMgmt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomMgmt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomMgmt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoomMgmt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton getHID;
    private javax.swing.JTextField hostelID_F;
    private javax.swing.JComboBox<String> hostelNameCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField roomNumber_F;
    private javax.swing.JTable roomTable;
    private javax.swing.JComboBox<String> statusCB;
    private javax.swing.JComboBox<String> typeCB;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
